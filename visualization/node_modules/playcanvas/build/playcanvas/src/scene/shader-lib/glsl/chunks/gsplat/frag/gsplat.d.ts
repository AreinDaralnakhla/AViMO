declare const _default: "\n\n#ifndef DITHER_NONE\n    #include \"bayerPS\"\n    #include \"opacityDitherPS\"\n    varying float id;\n#endif\n\n#ifdef PICK_PASS\n    #include \"pickPS\"\n#endif\n\n#if defined(SHADOW_PASS) || defined(PICK_PASS) || defined(PREPASS_PASS)\n    uniform float alphaClip;\n#endif\n\n#ifdef PREPASS_PASS\n    varying float vLinearDepth;\n    #include \"floatAsUintPS\"\n#endif\n\n// Fast approximate e^x based on https://nic.schraudolph.org/pubs/Schraudolph99.pdf\nconst float  EXP_A      = 12102203.0;   // \u2248 2^23 / ln(2)\nconst int    EXP_BC_RMS = 1064866808;   // (127 << 23) - 60801 * 8\nfloat fastExp(float x) {\n    int i = int(EXP_A * x) + EXP_BC_RMS;\n    return intBitsToFloat(i);\n}\n\nvarying mediump vec2 gaussianUV;\nvarying mediump vec4 gaussianColor;\n\nvoid main(void) {\n    mediump float A = dot(gaussianUV, gaussianUV);\n    if (A > 1.0) {\n        discard;\n    }\n\n    // evaluate alpha\n    mediump float alpha = fastExp(-A * 4.0) * gaussianColor.a;\n\n    #if defined(SHADOW_PASS) || defined(PICK_PASS) || defined(PREPASS_PASS)\n        if (alpha < alphaClip) {\n            discard;\n        }\n    #endif\n\n    #ifdef PICK_PASS\n\n        gl_FragColor = getPickOutput();\n\n    #elif SHADOW_PASS\n\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\n    #elif PREPASS_PASS\n\n        gl_FragColor = float2vec4(vLinearDepth);\n\n    #else\n        if (alpha < 1.0 / 255.0) {\n            discard;\n        }\n\n        #ifndef DITHER_NONE\n            opacityDither(alpha, id * 0.013);\n        #endif\n\n        gl_FragColor = vec4(gaussianColor.xyz * alpha, alpha);\n    #endif\n}\n";
export default _default;
