declare const _default: "\n\n#include \"varyingsVS\"\n\n#include  \"litUserDeclarationVS\"\n\n#ifdef VERTEX_COLOR\n    attribute vertex_color: vec4f;\n#endif\n\n#ifdef NINESLICED\n\n    varying vMask: vec2f;\n    varying vTiledUv: vec2f;\n\n    var<private> dMaskGlobal: vec2f;\n    var<private> dTiledUvGlobal: vec2f;\n\n    uniform innerOffset: vec4f;\n    uniform outerScale: vec2f;\n    uniform atlasRect: vec4f;\n\n#endif\n\nvar<private> dPositionW: vec3f;\nvar<private> dModelMatrix: mat4x4f;\n\n#include \"transformCoreVS\"\n\n#ifdef UV0\n    attribute vertex_texCoord0: vec2f;\n    #include \"uv0VS\"\n#endif\n\n#ifdef UV1\n    attribute vertex_texCoord1: vec2f;\n    #include \"uv1VS\"\n#endif\n\n\n#ifdef LINEAR_DEPTH\n    #ifndef VIEWMATRIX\n    #define VIEWMATRIX\n        uniform matrix_view: mat4x4f;\n    #endif\n#endif\n\n#include \"transformVS\"\n\n#ifdef NORMALS\n    #include \"normalCoreVS\"\n    #include \"normalVS\"\n#endif\n\n#ifdef TANGENTS\n    attribute vertex_tangent: vec4f;\n#endif\n\n// expand uniforms for uv transforms\n#include \"uvTransformUniformsPS, UV_TRANSFORMS_COUNT\"\n\n#ifdef MSDF\n    #include \"msdfVS\"\n#endif\n\n#include  \"litUserCodeVS\"\n\n@vertex\nfn vertexMain(input : VertexInput) -> VertexOutput {\n\n    #include \"litUserMainStartVS\"\n\n    var output : VertexOutput;\n    output.position = getPosition();\n    output.vPositionW = getWorldPosition();\n\n    #ifdef NORMALS\n        output.vNormalW = getNormal();\n    #endif\n\n    #ifdef TANGENTS\n        output.vTangentW = normalize(dNormalMatrix * vertex_tangent.xyz);\n        output.vBinormalW = cross(output.vNormalW, output.vTangentW) * vertex_tangent.w;\n    #elif defined(GGX_SPECULAR)\n        output.vObjectSpaceUpW = normalize(dNormalMatrix * vec3f(0.0, 1.0, 0.0));\n    #endif\n\n    #ifdef UV0\n        var uv0: vec2f = getUv0();\n        #ifdef UV0_UNMODIFIED\n            output.vUv0 = uv0;\n        #endif\n    #endif\n\n    #ifdef UV1\n        var uv1: vec2f = getUv1();\n        #ifdef UV1_UNMODIFIED\n            output.vUv1 = uv1;\n        #endif\n    #endif\n\n    // expand code for uv transforms\n    #include \"uvTransformVS, UV_TRANSFORMS_COUNT\"\n\n    #ifdef VERTEX_COLOR\n        output.vVertexColor = vertex_color;\n    #endif\n\n    #ifdef LINEAR_DEPTH\n        // linear depth from the worldPosition, see getLinearDepth\n        output.vLinearDepth = -(uniform.matrix_view * vec4f(output.vPositionW, 1.0)).z;\n    #endif\n\n    #ifdef MSDF\n        unpackMsdfParams();\n\n        output.outline_color = dOutlineColor;\n        output.outline_thickness = dOutlineThickness;\n        output.shadow_color = dShadowColor;\n        output.shadow_offset = dShadowOffset;\n    #endif\n\n    #ifdef NINESLICED\n        output.vMask = dMaskGlobal;\n        output.vTiledUv = dTiledUvGlobal;\n    #endif\n\n    #include \"litUserMainEndVS\"\n\n    return output;\n}\n";
export default _default;
