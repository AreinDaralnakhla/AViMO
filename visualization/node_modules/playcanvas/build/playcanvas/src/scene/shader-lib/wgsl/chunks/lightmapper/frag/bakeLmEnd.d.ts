declare const _default: "\n\n#ifdef LIT_LIGHTMAP_BAKING_ADD_AMBIENT\n    // diffuse light stores accumulated AO, apply contrast and brightness to it\n    // and multiply ambient light color by the AO\n    dDiffuseLight = ((dDiffuseLight - 0.5) * max(uniform.ambientBakeOcclusionContrast + 1.0, 0.0)) + 0.5;\n    dDiffuseLight = dDiffuseLight + vec3f(uniform.ambientBakeOcclusionBrightness);\n    dDiffuseLight = saturate3(dDiffuseLight);\n    dDiffuseLight = dDiffuseLight * dAmbientLight;\n#endif\n\n#ifdef LIGHTMAP_RGBM\n    // encode to RGBM\n    var temp_color_rgbm = vec4f(dDiffuseLight, 1.0);\n    temp_color_rgbm = vec4f(pow(temp_color_rgbm.rgb, vec3f(0.5)), temp_color_rgbm.a);\n    temp_color_rgbm = vec4f(temp_color_rgbm.rgb / 8.0, temp_color_rgbm.a);\n    let max_g_b = max(temp_color_rgbm.g, max(temp_color_rgbm.b, 1.0 / 255.0));\n    let max_rgb = max(temp_color_rgbm.r, max_g_b);\n    temp_color_rgbm.a = clamp(max_rgb, 0.0, 1.0);\n    temp_color_rgbm.a = ceil(temp_color_rgbm.a * 255.0) / 255.0;\n    temp_color_rgbm = vec4f(temp_color_rgbm.rgb / temp_color_rgbm.a, temp_color_rgbm.a);\n    output.color = temp_color_rgbm;\n#else\n    output.color = vec4f(dDiffuseLight, 1.0);\n#endif\n";
export default _default;
