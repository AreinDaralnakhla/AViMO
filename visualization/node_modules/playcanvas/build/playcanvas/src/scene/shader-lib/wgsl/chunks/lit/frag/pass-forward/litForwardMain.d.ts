declare const _default: "\n\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\n    #include \"litUserMainStartPS\"\n\n    dReflection = vec4f(0.0);\n\n    #ifdef LIT_CLEARCOAT\n        ccSpecularLight = vec3f(0.0);\n        ccReflection = vec3f(0.0);\n    #endif\n\n    #if LIT_NONE_SLICE_MODE == SLICED\n        #include \"startNineSlicedPS\"\n    #elif LIT_NONE_SLICE_MODE == TILED\n        #include \"startNineSlicedTiledPS\"\n    #endif\n\n    #ifdef LIT_NEEDS_NORMAL\n        dVertexNormalW = normalize(vNormalW);\n\n        #ifdef LIT_TANGENTS\n            #if defined(LIT_HEIGHTS) || defined(LIT_USE_NORMALS) || defined(LIT_USE_CLEARCOAT_NORMALS) || defined(LIT_GGX_SPECULAR)\n                dTangentW = vTangentW;\n                dBinormalW = vBinormalW;\n            #endif\n        #endif\n\n        getViewDir();\n\n        #ifdef LIT_TBN\n            getTBN(dTangentW, dBinormalW, dVertexNormalW);\n\n            #ifdef LIT_TWO_SIDED_LIGHTING\n                handleTwoSidedLighting();\n            #endif\n        #endif\n    #endif\n\n    // invoke frontend functions\n    evaluateFrontend();\n\n    #include \"debugProcessFrontendPS\"\n\n    var output: FragmentOutput = evaluateBackend();\n\n    #include \"litUserMainEndPS\"\n\n    return output;\n}\n";
export default _default;
