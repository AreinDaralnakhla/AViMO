declare const _default: "\n\n    varying uv0: vec2f;\n\n    var morphTexture: texture_2d_array<f32>;\n    var morphTextureSampler : sampler;\n    uniform morphFactor: array<f32, {MORPH_TEXTURE_MAX_COUNT}>;\n    uniform morphIndex: array<u32, {MORPH_TEXTURE_MAX_COUNT}>;\n    uniform count: u32;\n\n    @fragment\n    fn fragmentMain(input : FragmentInput) -> FragmentOutput {\n        var color = vec3f(0, 0, 0);\n        for (var i: u32 = 0; i < uniform.count; i = i + 1) {\n            var textureIndex: u32 = uniform.morphIndex[i].element;\n            var delta = textureSample(morphTexture, morphTextureSampler, input.uv0, textureIndex).xyz;\n            color += uniform.morphFactor[i].element * delta;\n        }\n\n        var output: FragmentOutput;\n        output.color = vec4f(color, 1.0);\n        return output;\n    }\n";
export default _default;
